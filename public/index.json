[
  {
    "id": 0,
    "title": "First Post",
    "content": "Why Should I write this This is my first post. Testing the blog setup.\nWhat to expect More content coming soon about marketing analytics and experimentation.\n",
    "tags": ["testing","intro"],
    "date": "2025-10-16",
    "permalink": "http://localhost:1313/posts/first-post/",
    "summary": "Why Should I write this This is my first post. Testing the blog setup.\nWhat to expect More content coming soon about marketing analytics and experimentation.\n"
  },
  {
    "id": 1,
    "title": "A/B Testing Simulator",
    "content": "Welcome! This is an interactive simulator where you can see A/B testing and statistical analysis in action.\nSection 1: Word Search Challenge Your Challenge You are in: Loading...\nUsername: Loading...\nWords to find: 0\n00:60:00\n‚ñ∂ Start Challenge ‚Üª Reset Found words: üéâ Challenge Complete! --:--:-- | 0 guesses Loading comparison...\nüîÑ Try Again üìä View Stats ‚è±Ô∏è Time's Up! You found 0 out of 0 words in 60 seconds. Don't worry! Try again and beat the clock. üí™\nüîÑ Try Again Section 2: Live Dashboard Results (Live) ‚ñ∂ Enable Live Refresh Variant A Users: 0\nCompletions: 0\nAvg Time: -\nSuccess Rate: -\nVariant B Users: 0\nCompletions: 0\nAvg Time: -\nSuccess Rate: -\nUser Funnel Variant A Started 0 Completed 0 Repeated 0 Completion: -% | Repeat: -%\nVariant B Started 0 Completed 0 Repeated 0 Completion: -% | Repeat: -%\nLast updated: never\nSection 3: Python Code How We Calculate It This is the actual Python code powering the analysis:\nimport pandas as pd from scipy import stats as scipy_stats import numpy as np # Load experiment data df = pd.read_csv('events.csv') # Split by variant a = df[df['variant'] == 'A']['converted'] b = df[df['variant'] == 'B']['converted'] # Frequentist: Chi-square test contingency = [[a.sum(), len(a)-a.sum()], [b.sum(), len(b)-b.sum()]] chi2, p_value, dof, expected = scipy_stats.chi2_contingency(contingency) # Bayesian: Beta-Binomial credible intervals alpha, beta = 1, 1 # Uniform priors a_alpha = alpha + a.sum() a_beta = beta + (len(a) - a.sum()) a_ci = scipy_stats.beta.ppf([0.025, 0.975], a_alpha, a_beta) # Calculate average completion times a_completed = df[(df['variant'] == 'A') \u0026 (df['action_type'] == 'completed')] b_completed = df[(df['variant'] == 'B') \u0026 (df['action_type'] == 'completed')] a_avg_time = a_completed['completion_time'].mean() b_avg_time = b_completed['completion_time'].mean() Section 4: Education Understanding the Results Why Bayesian and Frequentist? This simulator shows both approaches because they answer different questions:\nFrequentist: \"If we repeated this experiment many times, how often would we see this difference by chance?\" Bayesian: \"Given what we've observed, what's the probability that B is actually better than A?\" What Are Credible Intervals? The 95% credible interval means: \"We're 95% confident the true value is in this range.\"\n",
    "tags": null,
    "date": "2025-10-17",
    "permalink": "http://localhost:1313/experiments/ab-test-simulator/",
    "summary": "Welcome! This is an interactive simulator where you can see A/B testing and statistical analysis in action.\nSection 1: Word Search Challenge Your Challenge You are in: Loading...\nUsername: Loading...\nWords to find: 0\n00:60:00\n‚ñ∂ Start Challenge ‚Üª Reset Found words: "
  }]