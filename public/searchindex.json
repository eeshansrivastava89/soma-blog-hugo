[{"content":"Why Should I write this This is my first post. Testing the blog setup.\nWhat to expect More content coming soon about marketing analytics and experimentation.\n","date":"October 16, 2025","id":0,"permalink":"/posts/first-post/","summary":"This is my first post. Testing the blog setup.","tags":"testing intro","title":"First Post"},{"content":"Welcome! This is an interactive simulator where you can see A/B testing and statistical analysis in action.\nComplete this puzzle in 60 seconds where you will be \u0026ldquo;randomly\u0026rdquo; assigned in either Variant A and Variant B. One variant is harder than the other. We will do hypothesis testing to test that.\nPrimary KPI: Avg. Time to Complete Secondary KPI: Completion Rate (completed puzzles / started puzzles) Section 1: Word Search Challenge 🎯 Your Challenge Variant: Loading... Loading... 📋 Find 0 words 00:60:00\n▶ Start ↻ Reset Found: none yet 🎉 Complete! --:-- · 0 guesses Loading...\n🔄 Again 📊 Stats ⏱️ Time's Up! Found 0/0 🔄 Try Again 🏆 Top Players Complete a challenge to appear here\nPrivacy Notice: This experiment uses PostHog to track puzzle interactions for A/B testing analysis. No personal information is collected. Your performance data is used to improve the experiment and demonstrate statistical analysis techniques. Learn more Section 2: Live Dashboard Results (Live) Real-time analytics dashboard powered by PostHog + Supabase + Streamlit. Data updates when you interact with the dashboard. Section 3: Python Code How We Calculate It This is the actual Python code powering the analysis:\nimport pandas as pd from scipy import stats as scipy_stats import numpy as np # Load experiment data df = pd.read_csv('events.csv') # Split by variant a = df[df['variant'] == 'A']['converted'] b = df[df['variant'] == 'B']['converted'] # Frequentist: Chi-square test contingency = [[a.sum(), len(a)-a.sum()], [b.sum(), len(b)-b.sum()]] chi2, p_value, dof, expected = scipy_stats.chi2_contingency(contingency) # Bayesian: Beta-Binomial credible intervals alpha, beta = 1, 1 # Uniform priors a_alpha = alpha + a.sum() a_beta = beta + (len(a) - a.sum()) a_ci = scipy_stats.beta.ppf([0.025, 0.975], a_alpha, a_beta) # Calculate average completion times a_completed = df[(df['variant'] == 'A') \u0026 (df['action_type'] == 'completed')] b_completed = df[(df['variant'] == 'B') \u0026 (df['action_type'] == 'completed')] a_avg_time = a_completed['completion_time'].mean() b_avg_time = b_completed['completion_time'].mean() Section 4: Education Understanding the Results Why Bayesian and Frequentist? This simulator shows both approaches because they answer different questions:\nFrequentist: \u0026ldquo;If we repeated this experiment many times, how often would we see this difference by chance?\u0026rdquo; Bayesian: \u0026ldquo;Given what we\u0026rsquo;ve observed, what\u0026rsquo;s the probability that B is actually better than A?\u0026rdquo; What Are Credible Intervals? The 95% credible interval means: \u0026ldquo;We\u0026rsquo;re 95% confident the true value is in this range.\u0026rdquo;\n","date":"October 17, 2025","id":1,"permalink":"/projects/ab-test-simulator/","summary":"Welcome! This is an interactive simulator where you can see A/B testing and statistical analysis in action.","tags":"ab-testing posthog streamlit supabase hypothesis testing","title":"A/B Testing Simulator"}]